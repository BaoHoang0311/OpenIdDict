@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var path = Context.Request.Path;

    var encodedReturnUrl = Context.Request.Query["returnUrl"].ToString(); // %2FHome%2FPrivacy
    var decodedReturnUrl = string.Empty;
    if(encodedReturnUrl != null){
        decodedReturnUrl = Uri.UnescapeDataString(encodedReturnUrl.ToString() == null ? "" : encodedReturnUrl); // /Home/Privacy
    }
    List<string> excluddee = new List<string>(){"Login","Register"};
    var controller = Context.Request.RouteValues["controller"];
    var ddd = "";
    if(string.IsNullOrEmpty(decodedReturnUrl)){
        if(excluddee.Contains(controller.ToString()))
        {
            ddd="";
        }
        else{
            ddd =  path.ToString() ;
        }
    }
    else{
        ddd = decodedReturnUrl;
    }

}
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" title="Manage" asp-action="GetProfile" asp-controller="Profile">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="" asp-controller="Authen" asp-action="Logout">Logout</a>
    </li>
}   
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-controller="Register" asp-action="Register"
        asp-route-returnUrl="@ddd"> 
        Register
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-controller="Home" asp-action="Login"  asp-route-returnUrl="@ddd"> 
            Login
        </a>
    </li>
}
</ul>
